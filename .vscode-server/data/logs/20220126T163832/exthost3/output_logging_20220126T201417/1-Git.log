Validating found git in: git
Using git 2.25.1 from git
> git rev-parse --git-dir
Open repository: /home/force-badname/Agency-website
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git checkout -q -b Contact-us --no-track HEAD
fatal: 'HEAD' is not a commit and a branch 'Contact-us' cannot be created from it
> git checkout -q -b contact-us --no-track HEAD
fatal: 'HEAD' is not a commit and a branch 'contact-us' cannot be created from it
> git add -A -- .
warning: adding embedded git repository: User-Stories
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint: 
hint: 	git submodule add <url> User-Stories
hint: 
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint: 
hint: 	git rm --cached User-Stories
hint: 
hint: See "git help submodule" for more information.
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git checkout -q master
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv HEAD:User-Stories
> git ls-tree -l HEAD -- /home/force-badname/Agency-website/User-Stories
> git show --textconv HEAD:User-Stories
> git ls-tree -l HEAD -- /home/force-badname/Agency-website/User-Stories
> git show --textconv HEAD:User-Stories
> git ls-tree -l HEAD -- /home/force-badname/Agency-website/User-Stories
> git show --textconv HEAD:User-Stories
> git ls-tree -l HEAD -- /home/force-badname/Agency-website/User-Stories
> git check-ignore -v -z --stdin
> git show --textconv :style.css
> git ls-files --stage -- /home/force-badname/Agency-website/style.css
> git cat-file -s 33281a2aa0a800a5135abf574138013719eed8b6
> git show --textconv :script.js
> git ls-files --stage -- /home/force-badname/Agency-website/script.js
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :style.css
> git ls-files --stage -- /home/force-badname/Agency-website/style.css
> git cat-file -s 33281a2aa0a800a5135abf574138013719eed8b6
> git show --textconv :User-Stories/style.css
> git ls-files --stage -- /home/force-badname/Agency-website/User-Stories/style.css
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git checkout -q -b about-us --no-track HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/about-us refs/remotes/about-us
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/force-badname/Agency-website/User-Stories/style.css
> git show --textconv :User-Stories/style.css
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/about-us refs/remotes/about-us
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/force-badname/Agency-website/User-Stories/style.css
> git show --textconv :User-Stories/index.html
> git ls-files --stage -- /home/force-badname/Agency-website/User-Stories/index.html
> git show --textconv :User-Stories/script.js
> git ls-files --stage -- /home/force-badname/Agency-website/User-Stories/script.js
> git show --textconv :User-Stories/index.html
> git ls-files --stage -- /home/force-badname/Agency-website/User-Stories/index.html
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/about-us refs/remotes/about-us
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
